(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))t(o);new MutationObserver(o=>{for(const r of o)if(r.type==="childList")for(const s of r.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&t(s)}).observe(document,{childList:!0,subtree:!0});function a(o){const r={};return o.integrity&&(r.integrity=o.integrity),o.referrerPolicy&&(r.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?r.credentials="include":o.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function t(o){if(o.ep)return;o.ep=!0;const r=a(o);fetch(o.href,r)}})();const V={4:"Afghanistan",8:"Albania",10:"Antarctica",12:"Algeria",16:"American Samoa",20:"Andorra",24:"Angola",28:"Antigua and Barbuda",31:"Azerbaijan",32:"Argentina",36:"Australia",40:"Austria",44:"Bahamas",48:"Bahrain",50:"Bangladesh",51:"Armenia",52:"Barbados",56:"Belgium",60:"Bermuda",64:"Bhutan",68:"Bolivia",70:"Bosnia and Herzegovina",72:"Botswana",76:"Brazil",84:"Belize",90:"Solomon Islands",92:"British Virgin Islands",96:"Brunei",100:"Bulgaria",104:"Myanmar",108:"Burundi",112:"Belarus",116:"Cambodia",120:"Cameroon",124:"Canada",132:"Cape Verde",136:"Cayman Islands",140:"Central African Republic",144:"Sri Lanka",148:"Chad",152:"Chile",156:"China",170:"Colombia",174:"Comoros",175:"Mayotte",178:"Congo",180:"Democratic Republic of the Congo",184:"Cook Islands",188:"Costa Rica",191:"Croatia",192:"Cuba",196:"Cyprus",203:"Czech Republic",204:"Benin",208:"Denmark",212:"Dominica",214:"Dominican Republic",218:"Ecuador",222:"El Salvador",226:"Equatorial Guinea",231:"Ethiopia",232:"Eritrea",233:"Estonia",234:"Faroe Islands",242:"Fiji",246:"Finland",250:"France",254:"French Guiana",258:"French Polynesia",262:"Djibouti",266:"Gabon",268:"Georgia",270:"Gambia",275:"Palestine",276:"Germany",288:"Ghana",292:"Gibraltar",296:"Kiribati",300:"Greece",304:"Greenland",308:"Grenada",312:"Guadeloupe",316:"Guam",320:"Guatemala",324:"Guinea",328:"Guyana",332:"Haiti",336:"Vatican City",340:"Honduras",344:"Hong Kong",348:"Hungary",352:"Iceland",356:"India",360:"Indonesia",364:"Iran",368:"Iraq",372:"Ireland",376:"Israel",380:"Italy",384:"Ivory Coast",388:"Jamaica",392:"Japan",398:"Kazakhstan",400:"Jordan",404:"Kenya",408:"North Korea",410:"South Korea",414:"Kuwait",417:"Kyrgyzstan",418:"Laos",422:"Lebanon",426:"Lesotho",428:"Latvia",430:"Liberia",434:"Libya",438:"Liechtenstein",440:"Lithuania",442:"Luxembourg",446:"Macao",450:"Madagascar",454:"Malawi",458:"Malaysia",462:"Maldives",466:"Mali",470:"Malta",474:"Martinique",478:"Mauritania",480:"Mauritius",484:"Mexico",492:"Monaco",496:"Mongolia",498:"Moldova",499:"Montenegro",500:"Montserrat",504:"Morocco",508:"Mozambique",512:"Oman",516:"Namibia",520:"Nauru",524:"Nepal",528:"Netherlands",531:"Curacao",533:"Aruba",534:"Sint Maarten",535:"Bonaire",540:"New Caledonia",548:"Vanuatu",554:"New Zealand",558:"Nicaragua",562:"Niger",566:"Nigeria",570:"Niue",574:"Norfolk Island",578:"Norway",580:"Northern Mariana Islands",581:"United States Minor Outlying Islands",583:"Micronesia",584:"Marshall Islands",585:"Palau",586:"Pakistan",591:"Panama",598:"Papua New Guinea",600:"Paraguay",604:"Peru",608:"Philippines",612:"Pitcairn Islands",616:"Poland",620:"Portugal",624:"Guinea-Bissau",626:"East Timor",630:"Puerto Rico",634:"Qatar",638:"Reunion",642:"Romania",643:"Russia",646:"Rwanda",654:"Saint Helena",659:"Saint Kitts and Nevis",662:"Saint Lucia",666:"Saint Pierre and Miquelon",670:"Saint Vincent and the Grenadines",674:"San Marino",678:"Sao Tome and Principe",682:"Saudi Arabia",686:"Senegal",688:"Serbia",690:"Seychelles",694:"Sierra Leone",702:"Singapore",703:"Slovakia",704:"Vietnam",705:"Slovenia",706:"Somalia",710:"South Africa",716:"Zimbabwe",724:"Spain",728:"South Sudan",729:"Sudan",732:"Western Sahara",740:"Suriname",744:"Svalbard and Jan Mayen",748:"Swaziland",752:"Sweden",756:"Switzerland",760:"Syria",762:"Tajikistan",764:"Thailand",768:"Togo",772:"Tokelau",776:"Tonga",780:"Trinidad and Tobago",784:"United Arab Emirates",788:"Tunisia",792:"Turkey",795:"Turkmenistan",796:"Turks and Caicos Islands",798:"Tuvalu",800:"Uganda",804:"Ukraine",807:"North Macedonia",818:"Egypt",826:"United Kingdom",831:"Guernsey",832:"Jersey",833:"Isle of Man",834:"Tanzania",840:"United States",850:"U.S. Virgin Islands",854:"Burkina Faso",858:"Uruguay",860:"Uzbekistan",862:"Venezuela",876:"Wallis and Futuna",882:"Samoa",887:"Yemen",894:"Zambia",901:"British Antarctic Territory",902:"British Indian Ocean Territory",903:"French Southern Territories",904:"South Georgia and South Sandwich Islands",905:"Heard Island and McDonald Islands",906:"Caribbean Netherlands",907:"Saint Barthelemy",908:"Saint Martin",909:"Sark",910:"Christmas Island",911:"Cocos Islands",912:"Northern Cyprus",913:"South Ossetia",914:"Transnistria",915:"Wake Island",916:"Abkhazia",917:"Kosovo"},w={tokens:5,refillRate:1e3,lastRefill:Date.now(),bucket:5};function K(){const n=Date.now(),e=n-w.lastRefill,a=Math.floor(e/w.refillRate);if(a>0&&(w.bucket=Math.min(w.tokens,w.bucket+a),w.lastRefill=n),w.bucket<=0)throw new Error("Rate limit exceeded. Please try again later.");w.bucket--}async function Y(n){if(!n||typeof n!="string")throw new Error("Invalid country name");if(K(),!/^[a-zA-Z0-9\s-]+$/.test(n))throw new Error("Invalid country name format");const e=`https://restcountries.com/v3.1/name/${encodeURIComponent(n)}?fullText=true`;try{const a=new AbortController,t=setTimeout(()=>a.abort(),5e3),o=await fetch(e,{signal:a.signal,headers:{Accept:"application/json"},referrerPolicy:"no-referrer"});if(clearTimeout(t),!o.ok)throw new Error(`Failed to fetch data for ${n}: ${o.statusText}`);const r=await o.json();if(!Array.isArray(r)||!r.length||!r[0])throw new Error("Invalid response format");const s=r[0];if(typeof s!="object")throw new Error("Invalid data format");return s}catch(a){if(console.error("Error fetching country stats:",a),a.name==="AbortError")throw new Error("Request timeout");return null}}function q(){window.onerror=function(n,e,a,t,o){const r={message:n,url:e,line:a,column:t,error:(o==null?void 0:o.stack)||"No stack trace"};console.error("Global error:",r);const s=document.createElement("div");return s.style.cssText=`
            position: fixed;
            bottom: 20px;
            left: 50%;
            transform: translateX(-50%);
            background: rgba(255, 0, 0, 0.8);
            color: white;
            padding: 10px 20px;
            border-radius: 5px;
            z-index: 1000;
            max-width: 80%;
            text-align: center;
        `,s.textContent="An error occurred. Please try refreshing the page.",document.body.appendChild(s),setTimeout(()=>{s.remove()},5e3),!1},window.addEventListener("unhandledrejection",function(n){return console.error("Unhandled promise rejection:",n.reason),!1})}function d(n){return typeof n!="string"?"":n.replace(/[<>]/g,"")}let A,g,y,R,H,T,N,b,x={},S=null,m=null,L=!1,D={x:0,y:0},f={x:0,y:0},P=110,z=400,C=200,v=!0;const Z=5e-4,B={line:new THREE.LineBasicMaterial({color:1515562,linewidth:1}),shape:new THREE.MeshPhongMaterial({color:11128035,transparent:!0,opacity:0,side:THREE.DoubleSide,flatShading:!0})};let I={x:0,y:0},M={x:0,y:0};const k=.1;q();function J(){A=new THREE.Scene,g=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,.1,1e3),g.position.z=C,y=new THREE.WebGLRenderer({antialias:!0,alpha:!0}),y.setSize(window.innerWidth,window.innerHeight),y.setPixelRatio(window.devicePixelRatio),document.getElementById("container").appendChild(y.domElement),R=new THREE.Raycaster,H=new THREE.Vector2,T=document.getElementById("country-name"),b=new THREE.Group,A.add(b),X();const n=new THREE.AmbientLight(16777215,.5);A.add(n);const e=new THREE.DirectionalLight(16777215,.45);e.position.set(5,3,5),A.add(e),window.addEventListener("resize",re),window.addEventListener("mousemove",ne),y.domElement.addEventListener("mousedown",ie),window.addEventListener("mouseup",se),y.domElement.addEventListener("wheel",le),y.domElement.addEventListener("dblclick",ce),F()}function X(){const e=new THREE.SphereGeometry(100,64,64),a=new THREE.MeshPhongMaterial({color:16710119,transparent:!1,opacity:1});N=new THREE.Mesh(e,a),b.add(N),fetch("https://raw.githubusercontent.com/mbostock/topojson/v1.6.19/examples/world-50m.json").then(t=>t.json()).then(t=>{const o=topojson.feature(t,t.objects.countries);o.features.forEach(r=>{r.properties=r.properties||{},r.properties.name=V[r.id]||`Country ${r.id}`}),_(o,100),Q(100)}).catch(t=>{console.error("Error loading data:",t),ee(100)})}function Q(n){const e=[[20.59,43.033],[20.52,42.46],[21.02,42.26],[21.77,42.31],[21.59,42.862],[20.59,43.033]].map(([u,h])=>j(h,u,n)),a=new THREE.BufferGeometry;a.setAttribute("position",new THREE.Float32BufferAttribute(e.flatMap(u=>[u.x,u.y,u.z]),3));const t=new THREE.Group;t.userData={name:"Kosovo",originalColor:1515562,id:917,parts:[]};const o=new THREE.Line(a,B.line.clone()),r=new THREE.BufferGeometry,s=[],i=[],l=new THREE.Vector3;e.forEach(u=>l.add(u)),l.divideScalar(e.length),l.normalize().multiplyScalar(n);for(let u=0;u<e.length-1;u++)s.push(...l.toArray(),...e[u].toArray(),...e[u+1].toArray()),i.push(0,0,0,1,1,1);r.setAttribute("position",new THREE.Float32BufferAttribute(s,3)),r.setAttribute("uv",new THREE.Float32BufferAttribute(i,2)),r.computeVertexNormals();const c=new THREE.Mesh(r,B.shape.clone());o.frustumCulled=!0,c.frustumCulled=!0,t.add(o),t.add(c),t.userData.parts.push({line:o,shape:c}),x[917]=t,b.add(t)}function _(n,e){n.features.forEach(a=>{const t=a.properties.name||"Unknown Country",o=new THREE.Group;o.userData={name:t,originalColor:1515562,id:a.id,parts:[]},a.geometry.type==="Polygon"?$(a.geometry.coordinates,e,o):a.geometry.type==="MultiPolygon"&&a.geometry.coordinates.forEach(r=>{$(r,e,o)}),x[a.id]=o,b.add(o)})}function $(n,e,a){if(!n||!n[0]||n[0].length<3)return;const t=[],o=g.position.z,r=Math.max(1,Math.floor(o/100));for(let p=0;p<n[0].length;p+=r){const G=n[0][p];if(Array.isArray(G)&&G.length>=2){const[O,U]=G,W=j(U,O,e);t.push(W)}}if(t.length<3)return;const s=new THREE.BufferGeometry;s.setAttribute("position",new THREE.Float32BufferAttribute(t.flatMap(p=>[p.x,p.y,p.z]),3)),s.computeBoundingSphere();const i=new THREE.Line(s,B.line.clone()),l=new THREE.BufferGeometry,c=[],u=[],h=new THREE.Vector3;t.forEach(p=>h.add(p)),h.divideScalar(t.length),h.normalize().multiplyScalar(e);for(let p=0;p<t.length-1;p++)c.push(...h.toArray(),...t[p].toArray(),...t[p+1].toArray()),u.push(0,0,0,1,1,1);c.push(...h.toArray(),...t[t.length-1].toArray(),...t[0].toArray()),u.push(0,0,0,1,1,1),l.setAttribute("position",new THREE.Float32BufferAttribute(c,3)),l.setAttribute("uv",new THREE.Float32BufferAttribute(u,2)),l.computeVertexNormals(),l.computeBoundingSphere();const E=new THREE.Mesh(l,B.shape.clone());i.frustumCulled=!0,E.frustumCulled=!0,a.add(i),a.add(E),a.userData.parts.push({line:i,shape:E})}function j(n,e,a){const t=(90-n)*Math.PI/180,o=(e+180)*Math.PI/180,r=-100*Math.sin(t)*Math.cos(o),s=a*Math.cos(t),i=a*Math.sin(t)*Math.sin(o);return new THREE.Vector3(r,s,i)}function ee(n){const e=new THREE.SphereGeometry(n,32,32),a=new THREE.MeshBasicMaterial({color:11128035,wireframe:!0}),t=new THREE.Mesh(e,a);b.add(t)}function te(n,e){let a;return function(...t){const o=this;a||(n.apply(o,t),a=!0,setTimeout(()=>{a=!1},e))}}function ne(n){if(H.x=n.clientX/window.innerWidth*2-1,H.y=-(n.clientY/window.innerHeight)*2+1,L){const e={x:n.clientX-D.x,y:n.clientY-D.y};M.x+=e.y*.005,M.y+=e.x*.005,M.x=Math.max(-Math.PI/2,Math.min(Math.PI/2,M.x)),D={x:n.clientX,y:n.clientY}}L||ae()}const ae=te(oe,100);function oe(){if(R.setFromCamera(H,g),S&&S!==m){const a=x[S];a&&(a.userData.parts?a.userData.parts.forEach(t=>{t.line.material.color.setHex(a.userData.originalColor),t.shape.material.opacity=0,t.line.material.needsUpdate=!0,t.shape.material.needsUpdate=!0}):(a.material.color.setHex(a.userData.originalColor),a.material.needsUpdate=!0)),S=null,m||(T.textContent="")}const n=[];Object.values(x).forEach(a=>{a.userData.parts?a.userData.parts.forEach(t=>{n.push(t.line),n.push(t.shape)}):n.push(a)});const e=R.intersectObjects(n);if(e.length>0){const t=e[0].object.parent;if(t.userData.id!==m){S=t.userData.id;const o=16777215,r=1515562;t.userData.parts?t.userData.parts.forEach(s=>{s.line.material.color.setHex(r),s.shape.material.color.setHex(o),s.shape.material.opacity=.6,s.line.material.needsUpdate=!0,s.shape.material.needsUpdate=!0}):(t.material.color.setHex(o),t.material.needsUpdate=!0),m||(T.textContent=t.userData.name)}}else m||(T.textContent="")}function re(){g.aspect=window.innerWidth/window.innerHeight,g.updateProjectionMatrix(),y.setSize(window.innerWidth,window.innerHeight)}function ie(n){L=!0,v=!1,D={x:n.clientX,y:n.clientY}}function se(){L=!1,setTimeout(()=>{v=!0},1e3)}function le(n){n.preventDefault(),v=!1;const a=-Math.sign(n.deltaY)*15;C=g.position.z-a,C=Math.max(P,Math.min(z,C)),g.position.z=C,clearTimeout(this.wheelTimeout),this.wheelTimeout=setTimeout(()=>{v=!0},500)}function ce(){R.setFromCamera(H,g);const n=[];Object.values(x).forEach(i=>{i.userData.parts?i.userData.parts.forEach(l=>{n.push(l.line),n.push(l.shape)}):n.push(i)});const e=R.intersectObjects(n);if(e.length===0){if(m){const l=x[m];l&&l.userData.parts&&l.userData.parts.forEach(c=>{c.line.material.color.setHex(l.userData.originalColor),c.shape.material.opacity=0,c.line.material.needsUpdate=!0,c.shape.material.needsUpdate=!0})}m=null,T.textContent="";const i=document.getElementById("country-stats");i.innerHTML="";return}const t=e[0].object.parent,o=t.userData.name;if(m&&m!==t.userData.id){const i=x[m];i&&i.userData.parts&&i.userData.parts.forEach(l=>{i.userData.parts.forEach(c=>{c.line.material.color.setHex(i.userData.originalColor),c.shape.material.opacity=0,c.line.material.needsUpdate=!0,c.shape.material.needsUpdate=!0})})}m=t.userData.id,T.textContent=o;const r=16777215,s=1515562;t.userData.parts&&t.userData.parts.forEach(i=>{i.line.material.color.setHex(s),i.shape.material.color.setHex(r),i.shape.material.opacity=.6,i.line.material.needsUpdate=!0,i.shape.material.needsUpdate=!0}),Y(o).then(i=>{i?ue(o,i):console.error(`No stats available for ${o}`)})}function ue(n,e){var o,r;const a=document.getElementById("country-stats");if(!a){console.error("Stats container not found in the DOM.");return}const t=d(n);if(a.innerHTML="",e){a.innerHTML=`
            <div style="text-align: center; margin-bottom: 15px;">
                ${e.flags?`<img src="${e.flags.png}" alt="${t} flag" style="max-width: 100px; margin-bottom: 10px;">`:""}
                <h2>${t}</h2>
            </div>
        `;const s=e.currencies?Object.values(e.currencies).map(h=>`${d(h.name)} (${d(h.symbol||"")})`).join(", "):"N/A",i=e.area?(e.population/e.area).toFixed(2):"N/A",l=e.car?`${d(e.car.side)} side, ${e.car.signs?e.car.signs.map(d).join(", "):"N/A"}`:"N/A",c=e.startOfWeek?d(e.startOfWeek.charAt(0).toUpperCase()+e.startOfWeek.slice(1)):"N/A";let u="N/A";if(e.gini&&typeof e.gini=="object"){const h=Object.keys(e.gini).sort((E,p)=>p-E);if(h.length>0){const E=h[0];u=`${e.gini[E].toFixed(1)}% (${E})`}}a.innerHTML+=`
            <h3>Population & Demographics</h3>
            <p><strong>Population:</strong> ${e.population.toLocaleString()}</p>
            <p><strong>Density:</strong> ${i} people/km²</p>
            ${e.demonyms?`<p><strong>Demonym:</strong> ${d(e.demonyms.eng.m)}/${d(e.demonyms.eng.f)}</p>`:""}
            <p><strong>Languages:</strong> ${e.languages?Object.values(e.languages).map(d).join(", "):"N/A"}</p>
            
            <h3>Geography & Administration</h3>
            <p><strong>Region:</strong> ${d(e.region)}</p>
            <p><strong>Subregion:</strong> ${d(e.subregion||"N/A")}</p>
            <p><strong>Capital:</strong> ${d(e.capital?e.capital[0]:"N/A")}</p>
            <p><strong>Area:</strong> ${e.area.toLocaleString()} km²</p>
            ${e.borders?`<p><strong>Borders:</strong> ${e.borders.map(d).join(", ")}</p>`:""}
            
            <h3>Economic & Social</h3>
            <p><strong>Currency:</strong> ${s}</p>
            <p><strong>GINI Index:</strong> ${u}</p>
            <p><strong>UN Member:</strong> ${e.unMember?"Yes":"No"}</p>
            <p><strong>Independent:</strong> ${e.independent?"Yes":"No"}</p>
            
            <h3>Additional Info</h3>
            <p><strong>Timezones:</strong> ${e.timezones.map(d).join(", ")}</p>
            <p><strong>Driving:</strong> ${l}</p>
            <p><strong>Week starts:</strong> ${c}</p>
            ${e.tld?`<p><strong>Domain:</strong> ${e.tld.map(d).join(", ")}</p>`:""}
            ${(o=e.idd)!=null&&o.root?`<p><strong>Phone Code:</strong> ${d(e.idd.root)}${d(((r=e.idd.suffixes)==null?void 0:r[0])||"")}</p>`:""}
        `}else a.innerHTML+="<p>No data available.</p>"}function F(){if(requestAnimationFrame(F),v){const n=(C-P)/(z-P);if(n<.95){const e=1-n/.95;M.y+=Z*e}}f.x+=(M.x-f.x)*k,f.y+=(M.y-f.y)*k,(Math.abs(I.x-f.x)>1e-4||Math.abs(I.y-f.y)>1e-4)&&(b.rotation.x=f.x,b.rotation.y=f.y,I.x=f.x,I.y=f.y),y.render(A,g)}J();
//# sourceMappingURL=main-CStQAm67.js.map
